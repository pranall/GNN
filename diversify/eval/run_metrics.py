# -*- coding: utf-8 -*-
"""run_metrics

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wwWy0B4eH4Cxo53tTGMPIM3nwRoySuQZ
"""

from eval.metrics import (
    compute_silhouette, compute_davies_bouldin,
    compute_accuracy, compute_h_divergence,
    extract_features_labels, plot_metrics
)

from train import main
from utils.util import get_args
import torch

args = get_args()
args.use_gnn = True
model = main(args)

# Assuming you saved model and dataloaders
train_loader, valid_loader, target_loader = ...  # load them properly

# Feature extraction
train_feats, train_labels = extract_features_labels(model, train_loader)
target_feats, target_labels = extract_features_labels(model, target_loader)

# Evaluation Metrics
print("Test Accuracy (OOD):", compute_accuracy(model, target_loader))
print("Silhouette Score:", compute_silhouette(train_feats, train_labels))
print("Davies-Bouldin Score:", compute_davies_bouldin(train_feats, train_labels))
print("H-divergence:", compute_h_divergence(torch.tensor(train_feats).cuda(),
                                            torch.tensor(target_feats).cuda(),
                                            model.discriminator))

# Optional: Track losses and plot
history = {
    "GNN": {
        "train_acc": [...],  # fill from training logs
        "valid_acc": [...],
        "target_acc": [...],
        "class_loss": [...],
        "dis_loss": [...]
    }
}
plot_metrics(history)